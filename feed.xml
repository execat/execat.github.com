<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
<channel>
<title></title>
<description>execat's blog</description>
<link>http://execat.github.io</link>
<atom:link href="http://execat.github.io/feed.xml" rel="self" type="application/rss+xml" />

<item>
<title>Domain specific languages</title>
<description>&lt;p&gt;A &lt;a href=&quot;https://en.wikipedia.org/wiki/Domain-specific_language&quot;&gt;domain specific language&lt;/a&gt; is a type of programming language or specification language dedicated to a particular problem domain, a particular problem representation technique, and/or a particular solution technique.&lt;/p&gt;

&lt;p&gt;During my visit to &lt;a href=&quot;http://rubyconfindia.org/2013/&quot;&gt;RubyConf&lt;/a&gt;, I was introduced to two Ruby DSLs:&lt;/p&gt;

&lt;h1 id=&quot;musehttpsgithubcomsausheongmuse&quot;&gt;&lt;a href=&quot;https://github.com/sausheong/muse&quot;&gt;Muse&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;A RubyGem by Sau Sheong that (among other things) can be used to represent music. An excellent implementation of the gem was demonstrated in the talk: an auto music generator from any input data called &lt;a href=&quot;https://gist.github.com/sausheong/5891040&quot;&gt;“otto”&lt;/a&gt; (auto, otto. Get it? :-D).&lt;/p&gt;

&lt;p&gt;Alternative (older) version &lt;a href=&quot;https://github.com/sausheong/muse/blob/master/songs/otto.rb&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&quot;biorubyhttpsgithubcombiorubybioruby&quot;&gt;&lt;a href=&quot;https://github.com/bioruby/bioruby&quot;&gt;BioRuby&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;A RubyGem that according to the authors “is an open source Ruby library for developing bioinformatics software”.&lt;/p&gt;

&lt;p&gt;This was the first talk on RubyConf after the keynote, and for me, was mindblowing. I am looking for the video to be uploaded.&lt;/p&gt;

&lt;p&gt;As if the gem by itself wasn’t impressive, it has even more plugins(?) that run on top of the BioRuby. A repo of these gems can be found on &lt;a href=&quot;http://www.biogems.info/&quot;&gt;biogems.info&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Takes shit to another level by introducing “1” indexed strings among other things (to “make it easier for the biotechnologists”).&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;This inspired me to pick up my pet project that I started a year ago: &lt;a href=&quot;https://github.com/execat/musica&quot;&gt;musica&lt;/a&gt;; a DSL for composing music.&lt;/p&gt;

&lt;p&gt;More on that later (because I am undecided about the language to use :-P)&lt;/p&gt;
</description>
<pubDate>Fri, 05 Jul 2013 22:35:00 +0000</pubDate>
<link>http://execat.github.io/2013/domain-specific-languages-1</link>
<guid isPermaLink="true">http://execat.github.io/2013/domain-specific-languages-1</guid>
</item>

<item>
<title>Welcome to Jekyll!</title>
<description>&lt;p&gt;You’ll find this post in your &lt;code&gt;_posts&lt;/code&gt; directory - edit this post and re-build (or run with the &lt;code&gt;-w&lt;/code&gt; switch) to see your changes!
To add new posts, simply add a file in the &lt;code&gt;_posts&lt;/code&gt; directory that follows the convention: YYYY-MM-DD-name-of-post.ext.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Tom&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints &amp;#39;Hi, Tom&amp;#39; to STDOUT.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Check out the &lt;a href=&quot;http://jekyllrb.com&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/mojombo/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;.&lt;/p&gt;

</description>
<pubDate>Mon, 01 Jul 2013 20:50:00 +0000</pubDate>
<link>http://execat.github.io/2013/welcome-to-jekyll</link>
<guid isPermaLink="true">http://execat.github.io/2013/welcome-to-jekyll</guid>
</item>

</channel>
</rss>
